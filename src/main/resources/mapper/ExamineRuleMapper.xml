<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shoumipay.dao.ExamineRuleMapper">
  <resultMap id="BaseResultMap" type="com.shoumipay.domain.ExamineRule">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="using" jdbcType="BIT" property="using" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="parameter" jdbcType="VARCHAR" property="parameter" />
    <result column="match" jdbcType="INTEGER" property="match" />
    <result column="unmatch" jdbcType="INTEGER" property="unmatch" />
    <result column="processor" jdbcType="BIGINT" property="processor" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `using`, `type`, parameter, `match`, unmatch, processor, modify_time
  </sql>
  <select id="selectByExample" parameterType="com.shoumipay.domain.ExamineRuleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from cl_examine_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cl_examine_rule
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByUsing" parameterType="java.lang.Boolean" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from cl_examine_rule
    where `using` = #{using}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cl_examine_rule
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.shoumipay.domain.ExamineRuleExample">
    delete from cl_examine_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shoumipay.domain.ExamineRule">
    insert into cl_examine_rule (id, `using`, `type`, parameter,
      `match`, unmatch, processor,
      modify_time)
    values (#{id,jdbcType=BIGINT}, #{using,jdbcType=BIT}, #{type,jdbcType=VARCHAR}, #{parameter,jdbcType=VARCHAR}, 
      #{match,jdbcType=INTEGER}, #{unmatch,jdbcType=INTEGER}, #{processor,jdbcType=BIGINT}, 
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.shoumipay.domain.ExamineRule">
    insert into cl_examine_rule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="using != null">
        `using`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="parameter != null">
        parameter,
      </if>
      <if test="match != null">
        `match`,
      </if>
      <if test="unmatch != null">
        unmatch,
      </if>
      <if test="processor != null">
        processor,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="using != null">
        #{using,jdbcType=BIT},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="parameter != null">
        #{parameter,jdbcType=VARCHAR},
      </if>
      <if test="match != null">
        #{match,jdbcType=INTEGER},
      </if>
      <if test="unmatch != null">
        #{unmatch,jdbcType=INTEGER},
      </if>
      <if test="processor != null">
        #{processor,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shoumipay.domain.ExamineRuleExample" resultType="java.lang.Long">
    select count(*) from cl_examine_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cl_examine_rule
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.using != null">
        `using` = #{record.using,jdbcType=BIT},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.parameter != null">
        parameter = #{record.parameter,jdbcType=VARCHAR},
      </if>
      <if test="record.match != null">
        `match` = #{record.match,jdbcType=INTEGER},
      </if>
      <if test="record.unmatch != null">
        unmatch = #{record.unmatch,jdbcType=INTEGER},
      </if>
      <if test="record.processor != null">
        processor = #{record.processor,jdbcType=BIGINT},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cl_examine_rule
    set id = #{record.id,jdbcType=BIGINT},
      `using` = #{record.using,jdbcType=BIT},
      `type` = #{record.type,jdbcType=VARCHAR},
      parameter = #{record.parameter,jdbcType=VARCHAR},
      `match` = #{record.match,jdbcType=INTEGER},
      unmatch = #{record.unmatch,jdbcType=INTEGER},
      processor = #{record.processor,jdbcType=BIGINT},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shoumipay.domain.ExamineRule">
    update cl_examine_rule
    <set>
      <if test="using != null">
        `using` = #{using,jdbcType=BIT},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="parameter != null">
        parameter = #{parameter,jdbcType=VARCHAR},
      </if>
      <if test="match != null">
        `match` = #{match,jdbcType=INTEGER},
      </if>
      <if test="unmatch != null">
        unmatch = #{unmatch,jdbcType=INTEGER},
      </if>
      <if test="processor != null">
        processor = #{processor,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shoumipay.domain.ExamineRule">
    update cl_examine_rule
    set `using` = #{using,jdbcType=BIT},
      `type` = #{type,jdbcType=VARCHAR},
      parameter = #{parameter,jdbcType=VARCHAR},
      `match` = #{match,jdbcType=INTEGER},
      unmatch = #{unmatch,jdbcType=INTEGER},
      processor = #{processor,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>