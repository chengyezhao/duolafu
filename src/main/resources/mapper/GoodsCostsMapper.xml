<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shoumipay.dao.GoodsCostsMapper">
  <resultMap id="BaseResultMap" type="com.shoumipay.domain.GoodsCosts">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="goodsId" jdbcType="BIGINT" property="goodsid" />
    <result column="name" jdbcType="INTEGER" property="name" />
    <result column="billing_Methods" jdbcType="INTEGER" property="billingMethods" />
    <result column="cost" jdbcType="DECIMAL" property="cost" />
    <result column="collecting_Methods" jdbcType="INTEGER" property="collectingMethods" />
    <result column="settlement_Model" jdbcType="INTEGER" property="settlementModel" />
    <result column="B2B_Model" jdbcType="INTEGER" property="b2bModel" />
    <result column="P2P_Direct_Model" jdbcType="INTEGER" property="p2pDirectModel" />
    <result column="P2P_Indirect_Model" jdbcType="INTEGER" property="p2pIndirectModel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, goodsId, name, billing_Methods, cost, collecting_Methods, settlement_Model, B2B_Model, 
    P2P_Direct_Model, P2P_Indirect_Model
  </sql>
  <select id="selectByExample" parameterType="com.shoumipay.domain.GoodsCostsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from cl_goods_costs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByGoodsIdName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from cl_goods_costs
    WHERE goodsId = #{goodsId} AND `name` = #{name}
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cl_goods_costs
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cl_goods_costs
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.shoumipay.domain.GoodsCostsExample">
    delete from cl_goods_costs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shoumipay.domain.GoodsCosts">
    insert into cl_goods_costs (id, goodsId, name, 
      billing_Methods, cost, collecting_Methods, 
      settlement_Model, B2B_Model, P2P_Direct_Model, 
      P2P_Indirect_Model)
    values (#{id,jdbcType=BIGINT}, #{goodsid,jdbcType=BIGINT}, #{name,jdbcType=INTEGER}, 
      #{billingMethods,jdbcType=INTEGER}, #{cost,jdbcType=DECIMAL}, #{collectingMethods,jdbcType=INTEGER}, 
      #{settlementModel,jdbcType=INTEGER}, #{b2bModel,jdbcType=INTEGER}, #{p2pDirectModel,jdbcType=INTEGER}, 
      #{p2pIndirectModel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shoumipay.domain.GoodsCosts">
    insert into cl_goods_costs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsid != null">
        goodsId,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="billingMethods != null">
        billing_Methods,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="collectingMethods != null">
        collecting_Methods,
      </if>
      <if test="settlementModel != null">
        settlement_Model,
      </if>
      <if test="b2bModel != null">
        B2B_Model,
      </if>
      <if test="p2pDirectModel != null">
        P2P_Direct_Model,
      </if>
      <if test="p2pIndirectModel != null">
        P2P_Indirect_Model,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="goodsid != null">
        #{goodsid,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=INTEGER},
      </if>
      <if test="billingMethods != null">
        #{billingMethods,jdbcType=INTEGER},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=DECIMAL},
      </if>
      <if test="collectingMethods != null">
        #{collectingMethods,jdbcType=INTEGER},
      </if>
      <if test="settlementModel != null">
        #{settlementModel,jdbcType=INTEGER},
      </if>
      <if test="b2bModel != null">
        #{b2bModel,jdbcType=INTEGER},
      </if>
      <if test="p2pDirectModel != null">
        #{p2pDirectModel,jdbcType=INTEGER},
      </if>
      <if test="p2pIndirectModel != null">
        #{p2pIndirectModel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shoumipay.domain.GoodsCostsExample" resultType="java.lang.Long">
    select count(*) from cl_goods_costs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cl_goods_costs
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.goodsid != null">
        goodsId = #{record.goodsid,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=INTEGER},
      </if>
      <if test="record.billingMethods != null">
        billing_Methods = #{record.billingMethods,jdbcType=INTEGER},
      </if>
      <if test="record.cost != null">
        cost = #{record.cost,jdbcType=DECIMAL},
      </if>
      <if test="record.collectingMethods != null">
        collecting_Methods = #{record.collectingMethods,jdbcType=INTEGER},
      </if>
      <if test="record.settlementModel != null">
        settlement_Model = #{record.settlementModel,jdbcType=INTEGER},
      </if>
      <if test="record.b2bModel != null">
        B2B_Model = #{record.b2bModel,jdbcType=INTEGER},
      </if>
      <if test="record.p2pDirectModel != null">
        P2P_Direct_Model = #{record.p2pDirectModel,jdbcType=INTEGER},
      </if>
      <if test="record.p2pIndirectModel != null">
        P2P_Indirect_Model = #{record.p2pIndirectModel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cl_goods_costs
    set id = #{record.id,jdbcType=BIGINT},
      goodsId = #{record.goodsid,jdbcType=BIGINT},
      name = #{record.name,jdbcType=INTEGER},
      billing_Methods = #{record.billingMethods,jdbcType=INTEGER},
      cost = #{record.cost,jdbcType=DECIMAL},
      collecting_Methods = #{record.collectingMethods,jdbcType=INTEGER},
      settlement_Model = #{record.settlementModel,jdbcType=INTEGER},
      B2B_Model = #{record.b2bModel,jdbcType=INTEGER},
      P2P_Direct_Model = #{record.p2pDirectModel,jdbcType=INTEGER},
      P2P_Indirect_Model = #{record.p2pIndirectModel,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shoumipay.domain.GoodsCosts">
    update cl_goods_costs
    <set>
      <if test="goodsid != null">
        goodsId = #{goodsid,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=INTEGER},
      </if>
      <if test="billingMethods != null">
        billing_Methods = #{billingMethods,jdbcType=INTEGER},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=DECIMAL},
      </if>
      <if test="collectingMethods != null">
        collecting_Methods = #{collectingMethods,jdbcType=INTEGER},
      </if>
      <if test="settlementModel != null">
        settlement_Model = #{settlementModel,jdbcType=INTEGER},
      </if>
      <if test="b2bModel != null">
        B2B_Model = #{b2bModel,jdbcType=INTEGER},
      </if>
      <if test="p2pDirectModel != null">
        P2P_Direct_Model = #{p2pDirectModel,jdbcType=INTEGER},
      </if>
      <if test="p2pIndirectModel != null">
        P2P_Indirect_Model = #{p2pIndirectModel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shoumipay.domain.GoodsCosts">
    update cl_goods_costs
    set goodsId = #{goodsid,jdbcType=BIGINT},
      name = #{name,jdbcType=INTEGER},
      billing_Methods = #{billingMethods,jdbcType=INTEGER},
      cost = #{cost,jdbcType=DECIMAL},
      collecting_Methods = #{collectingMethods,jdbcType=INTEGER},
      settlement_Model = #{settlementModel,jdbcType=INTEGER},
      B2B_Model = #{b2bModel,jdbcType=INTEGER},
      P2P_Direct_Model = #{p2pDirectModel,jdbcType=INTEGER},
      P2P_Indirect_Model = #{p2pIndirectModel,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>