<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shoumipay.dao.NoticeMapper">
  <resultMap id="BaseResultMap" type="com.shoumipay.domain.Notice">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="acceptor" jdbcType="BIGINT" property="acceptor" />
    <result column="read" jdbcType="BIT" property="read" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="more" jdbcType="VARCHAR" property="more" />    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="processor" jdbcType="BIGINT" property="processor" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="active" jdbcType="TINYINT" property="active" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `type`, acceptor, `read`, title, content, `more`, create_time, processor, update_time, active
  </sql>
  <select id="selectByExample" parameterType="com.shoumipay.domain.NoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from cl_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="findNotMatch" resultMap="BaseResultMap">
    SELECT
        n.id AS id, `type`, acceptor, n.`read` AS `read`,
        title, content, `more`, create_time, processor, update_time, active
    FROM cl_notice AS n LEFT OUTER JOIN cl_notice_member AS m ON (n.id = m.notice_id AND m.member_id = #{memberId})
    WHERE n.acceptor = 0 AND active = 0 AND m.notice_id IS NULL
  </select>

  <select id="find" resultMap="BaseResultMap">
    SELECT
        n.id AS id,
        n.`type` AS `type`,
        IF(n.acceptor!=0, n.acceptor, m.member_id) AS acceptor,
        IF(n.acceptor!=0, n.`read`, m.`read`) AS `read`,
        title, content, `more`, create_time, processor, update_time, active
    FROM cl_notice AS n LEFT JOIN cl_notice_member AS m ON n.id = m.notice_id
    WHERE (n.acceptor = #{memberId} OR m.member_id = #{memberId})
        AND (m.`read` = TRUE OR n.`read` = TRUE OR n.active = 0)
    <if test="read != null">
        AND (m.`read` = #{read} OR n.`read` = #{read})
    </if>
    ORDER BY n.update_time DESC
    LIMIT #{firstRow}, #{size}
  </select>

  <select id="unread" resultType="java.lang.Long" >
    SELECT COUNT(*)
    FROM cl_notice AS n LEFT JOIN cl_notice_member AS m ON n.id = m.notice_id
    WHERE (n.acceptor = #{memberId} OR m.member_id = #{memberId})
    AND (m.`read` = TRUE OR n.`read` = TRUE OR n.active = 0)
    AND (m.`read` = FALSE OR n.`read` = FALSE)
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cl_notice
    where id = #{id,jdbcType=BIGINT}
  </select>


  <update id="updateRead" parameterType="java.lang.Long" >
    UPDATE cl_notice
    SET `read` = TRUE
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateAllRead" parameterType="java.lang.Long" >
    UPDATE cl_notice
    SET `read` = TRUE
    where acceptor = #{memberId,jdbcType=BIGINT}
  </update>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cl_notice
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.shoumipay.domain.NoticeExample">
    delete from cl_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shoumipay.domain.Notice">
    insert into cl_notice (id, `type`, acceptor,
      `read`, title, content, `more`, create_time,
      processor, update_time, active
      )
    values (#{id,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, #{acceptor,jdbcType=BIGINT}, 
      #{read,jdbcType=BIT}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{more,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{processor,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{active,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shoumipay.domain.Notice">
    insert into cl_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="acceptor != null">
        acceptor,
      </if>
      <if test="read != null">
        `read`,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="more != null">
        `more`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="processor != null">
        processor,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="active != null">
        active,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="acceptor != null">
        #{acceptor,jdbcType=BIGINT},
      </if>
      <if test="read != null">
        #{read,jdbcType=BIT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="more != null">
        #{more,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="processor != null">
        #{processor,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="active != null">
        #{active,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shoumipay.domain.NoticeExample" resultType="java.lang.Long">
    select count(*) from cl_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cl_notice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptor != null">
        acceptor = #{record.acceptor,jdbcType=BIGINT},
      </if>
      <if test="record.read != null">
        `read` = #{record.read,jdbcType=BIT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.more != null">
        `more` = #{record.more,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.processor != null">
        processor = #{record.processor,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.active != null">
        active = #{record.active,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cl_notice
    set id = #{record.id,jdbcType=BIGINT},
      `type` = #{record.type,jdbcType=VARCHAR},
      acceptor = #{record.acceptor,jdbcType=BIGINT},
      `read` = #{record.read,jdbcType=BIT},
      title = #{record.title,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      `more` = #{record.more,jdbcType=VARCHAR},      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      processor = #{record.processor,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      active = #{record.active,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shoumipay.domain.Notice">
    update cl_notice
    <set>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="acceptor != null">
        acceptor = #{acceptor,jdbcType=BIGINT},
      </if>
      <if test="read != null">
        `read` = #{read,jdbcType=BIT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="more != null">
        `more` = #{more,jdbcType=VARCHAR},
      </if>      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="processor != null">
        processor = #{processor,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shoumipay.domain.Notice">
    update cl_notice
    set `type` = #{type,jdbcType=VARCHAR},
      acceptor = #{acceptor,jdbcType=BIGINT},
      `read` = #{read,jdbcType=BIT},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      `more` = #{more,jdbcType=VARCHAR},      create_time = #{createTime,jdbcType=TIMESTAMP},
      processor = #{processor,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      active = #{active,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>